-- MySQL Script generated by MySQL Workbench
-- Wed May 15 14:04:56 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema online_voting_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema online_voting_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `online_voting_db` DEFAULT CHARACTER SET utf8mb3 ;
USE `online_voting_db` ;

-- -----------------------------------------------------
-- Table `online_voting_db`.`parties`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`parties` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `about` LONGTEXT NULL DEFAULT NULL,
  `leader` VARCHAR(255) NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`campaigns`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`campaigns` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `parties_id` INT NOT NULL,
  `website` VARCHAR(255) NULL DEFAULT NULL,
  `social_media` VARCHAR(255) NULL DEFAULT NULL,
  `slogan` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_campaign_parties1_idx` (`parties_id` ASC) VISIBLE,
  CONSTRAINT `fk_campaign_parties1`
    FOREIGN KEY (`parties_id`)
    REFERENCES `online_voting_db`.`parties` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`candidates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`candidates` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NOT NULL,
  `lname` VARCHAR(45) NOT NULL,
  `parties_id` INT NOT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_candidates_parties1_idx` (`parties_id` ASC) VISIBLE,
  CONSTRAINT `fk_candidates_parties1`
    FOREIGN KEY (`parties_id`)
    REFERENCES `online_voting_db`.`parties` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`candidate_statistics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`candidate_statistics` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `total_votes` INT NULL DEFAULT '0',
  `percentage` DECIMAL(10,0) NULL DEFAULT '0',
  `candidates_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_candidate_statistics_candidates1_idx` (`candidates_id` ASC) VISIBLE,
  CONSTRAINT `fk_candidate_statistics_candidates1`
    FOREIGN KEY (`candidates_id`)
    REFERENCES `online_voting_db`.`candidates` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`voting_lists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`voting_lists` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `elections_id` INT(10) UNSIGNED ZEROFILL NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_voting_list_elections1_idx` (`elections_id` ASC) VISIBLE,
  CONSTRAINT `fk_voting_list_elections1`
    FOREIGN KEY (`elections_id`)
    REFERENCES `online_voting_db`.`elections` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`elections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`elections` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `year` DATE NULL DEFAULT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  `type` VARCHAR(255) NULL DEFAULT NULL,
  `active` TINYINT NULL DEFAULT '1',
  `voting_lists_id` INT NULL DEFAULT NULL,
  `total_votes` INT UNSIGNED NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  INDEX `str_klj` (`voting_lists_id` ASC) VISIBLE,
  CONSTRAINT `str_klj`
    FOREIGN KEY (`voting_lists_id`)
    REFERENCES `online_voting_db`.`voting_lists` (`id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`voting_locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`voting_locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `street_address` VARCHAR(255) NULL DEFAULT NULL,
  `voting_address` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NOT NULL,
  `lname` VARCHAR(45) NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `voted` TINYINT(1) NULL DEFAULT '0',
  `admin` TINYINT(1) NULL DEFAULT '0',
  `address` VARCHAR(255) NULL DEFAULT NULL,
  `voting_locations_id` INT NULL DEFAULT '3',
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_users_voting_location1_idx` (`voting_locations_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_voting_location1`
    FOREIGN KEY (`voting_locations_id`)
    REFERENCES `online_voting_db`.`voting_locations` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 14
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`logs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_id` INT NOT NULL,
  `action` VARCHAR(255) NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_users_logs_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_logs_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `online_voting_db`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 40
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`notifications` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`results`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`results` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `elections_id` INT(10) UNSIGNED ZEROFILL NOT NULL,
  `declared_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `winner_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_results_elections1_idx` (`elections_id` ASC) VISIBLE,
  INDEX `fk_results_candidates1_idx` (`winner_id` ASC) VISIBLE,
  CONSTRAINT `fk_results_candidates1`
    FOREIGN KEY (`winner_id`)
    REFERENCES `online_voting_db`.`candidates` (`id`),
  CONSTRAINT `fk_results_elections1`
    FOREIGN KEY (`elections_id`)
    REFERENCES `online_voting_db`.`elections` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`users_feedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`users_feedback` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(255) NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`users_has_notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`users_has_notifications` (
  `users_id` INT NOT NULL,
  `notifications_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `notifications_id`),
  INDEX `fk_users_has_messages_messages1_idx` (`notifications_id` ASC) VISIBLE,
  INDEX `fk_users_has_messages_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_messages_messages1`
    FOREIGN KEY (`notifications_id`)
    REFERENCES `online_voting_db`.`notifications` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_messages_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `online_voting_db`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`votes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`votes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `candidates_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  `elections_id` INT UNSIGNED NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_votes_candidates1_idx` (`candidates_id` ASC) VISIBLE,
  INDEX `fk_votes_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_votes_elections` (`id` ASC) VISIBLE,
  INDEX `fk_votes_elections_idx` (`elections_id` ASC) VISIBLE,
  CONSTRAINT `fk_votes_candidates1`
    FOREIGN KEY (`candidates_id`)
    REFERENCES `online_voting_db`.`candidates` (`id`),
  CONSTRAINT `fk_votes_elections`
    FOREIGN KEY (`elections_id`)
    REFERENCES `online_voting_db`.`elections` (`id`),
  CONSTRAINT `fk_votes_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `online_voting_db`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `online_voting_db`.`voting_lists_has_candidates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `online_voting_db`.`voting_lists_has_candidates` (
  `voting_lists_id` INT NOT NULL,
  `candidates_id` INT NOT NULL,
  PRIMARY KEY (`voting_lists_id`, `candidates_id`),
  INDEX `fk_voting_lists_has_candidates_candidates1_idx` (`candidates_id` ASC) VISIBLE,
  INDEX `fk_voting_lists_has_candidates_voting_lists1_idx` (`voting_lists_id` ASC) VISIBLE,
  CONSTRAINT `fk_voting_lists_has_candidates_candidates1`
    FOREIGN KEY (`candidates_id`)
    REFERENCES `online_voting_db`.`candidates` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_voting_lists_has_candidates_voting_lists1`
    FOREIGN KEY (`voting_lists_id`)
    REFERENCES `online_voting_db`.`voting_lists` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

USE `online_voting_db` ;

-- -----------------------------------------------------
-- procedure add_notification
-- -----------------------------------------------------

DELIMITER $$
USE `online_voting_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `add_notification`(IN usrId INT, IN ntfId INT)
BEGIN
	INSERT INTO users_has_notifications (users_id, notifications_id) VALUES (usrId, ntfId);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure calculate_winner
-- -----------------------------------------------------

DELIMITER $$
USE `online_voting_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `calculate_winner`(IN electionsId INT)
BEGIN
	WITH best AS(
		SELECT candidates_id, COUNT(*) AS vote_count
		FROM votes
		WHERE elections_id = electionsId
		GROUP BY candidates_id
		)
	SELECT candidates_id
    FROM best
    ORDER BY vote_count DESC
	LIMIT 1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure count_candidate_votes
-- -----------------------------------------------------

DELIMITER $$
USE `online_voting_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `count_candidate_votes`(IN id INT, OUT candidate_total_votes INT)
BEGIN
	SELECT COUNT(*) INTO candidate_total_votes FROM votes where votes.candidates_id = id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure count_users
-- -----------------------------------------------------

DELIMITER $$
USE `online_voting_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `count_users`()
BEGIN
	SELECT COUNT(*) AS user_count FROM users;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure count_votes
-- -----------------------------------------------------

DELIMITER $$
USE `online_voting_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `count_votes`(IN electionsId INT)
BEGIN
	SELECT COUNT(*) AS vote_count FROM votes WHERE votes.elections_id = electionsId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure remove_notification
-- -----------------------------------------------------

DELIMITER $$
USE `online_voting_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `remove_notification`(IN usrId INT, IN ntfId INT)
BEGIN
	DELETE FROM users_has_notifications WHERE users_id = usrId AND notifications_id = ntfId;
END$$

DELIMITER ;
USE `online_voting_db`;

DELIMITER $$
USE `online_voting_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `online_voting_db`.`candidates_AFTER_INSERT`
AFTER INSERT ON `online_voting_db`.`candidates`
FOR EACH ROW
BEGIN
	INSERT INTO candidate_statistics (total_votes, candidates_id) VALUES (0, NEW.id);
END$$

USE `online_voting_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `online_voting_db`.`users_AFTER_INSERT`
AFTER INSERT ON `online_voting_db`.`users`
FOR EACH ROW
BEGIN
	CALL add_notification(NEW.id, 1);
END$$

USE `online_voting_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `online_voting_db`.`users_AFTER_UPDATE`
AFTER UPDATE ON `online_voting_db`.`users`
FOR EACH ROW
BEGIN
	IF NEW.voted = 1 THEN
		CALL remove_notification(NEW.id, 1);
        CALL add_notification(NEW.id, 2);
	END IF;
END$$

USE `online_voting_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `online_voting_db`.`votes_AFTER_INSERT`
AFTER INSERT ON `online_voting_db`.`votes`
FOR EACH ROW
BEGIN
	UPDATE elections SET total_votes = total_votes + 1 WHERE elections.id = NEW.elections_id;
END$$

USE `online_voting_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `online_voting_db`.`votes_BEFORE_INSERT`
BEFORE INSERT ON `online_voting_db`.`votes`
FOR EACH ROW
BEGIN
	UPDATE candidate_statistics SET total_votes = total_votes + 1 WHERE candidate_statistics.candidate_id = NEW.candidates_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
